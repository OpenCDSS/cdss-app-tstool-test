# Test reading the UserProps (OutputStart, OutputEnd) properties from a file
# - use the NameTypeValue format
# - specify parameters using ${Property}
StartLog(LogFile="Results/Test_ReadPropertiesFromFile_UserProps_NameTypeValue_Properties.TSTool.log")
RemoveFile(InputFile="Results/Test_ReadPropertiesFromFile_UserProps_NameTypeValue_Properties_out.txt",IfNotFound=Ignore)
# Read the properties
SetProperty(PropertyName="TestInputFile",PropertyType=String,PropertyValue="Data/UserProps_NameTypeValue.txt")
SetProperty(PropertyName="TestIntegerProp",PropertyType=String,PropertyValue="IntegerProp")
ReadPropertiesFromFile(InputFile="${TestInputFile}",IncludeProperty="DoubleProp,${TestIntegerProp}")
# Uncomment the following two commands to regenerate the expected results file.
# WritePropertiesToFile(OutputFile="ExpectedResults/Test_ReadPropertiesFromFile_UserProps_NameTypeValue_Properties_out.txt",IncludeProperties="DoubleProp,IntegerProp",FileFormat=NameTypeValue)
# Generate new output...
WritePropertiesToFile(OutputFile="Results/Test_ReadPropertiesFromFile_UserProps_NameTypeValue_Properties_out.txt",IncludeProperties="DoubleProp,IntegerProp",FileFormat=NameTypeValue)
# Do regression comparison...
CompareFiles(InputFile1="ExpectedResults\Test_ReadPropertiesFromFile_UserProps_NameTypeValue_Properties_out.txt",InputFile2="Results/Test_ReadPropertiesFromFile_UserProps_NameTypeValue_Properties_out.txt",IfDifferent=Warn)
# Unset properties from test so they won't interfere with other tests
SetProperty(PropertyName="DoubleProp",RemoveProperty=True)
SetProperty(PropertyName="IntegerProp",RemoveProperty=True)
