# Test running an external program using a full command line with other defaults
# - use a command shell internally to run and determine the exit status from the process exit value.
# - output to a file and check output using table of patterns
# The status will be failure because we are testing RunProgram processing
# This is tricky to test - so rely on another simple command file with same name as this but 2 on end to do file compare
#@expectedStatus Failure
StartLog(LogFile="Results/Test_RunProgram_CommandLine_echo_OutputCheckTable.TSTool.log")
RemoveFile(InputFile="Results\Test_RunProgram_CommandLine_echo_OutputCheckTable_out.txt",IfNotFound=Ignore)
ReadTableFromDelimitedFile(TableID="OutputChecksTable",InputFile="Data\output-checks1.csv")
SetProperty(PropertyName="TestOutputFile",PropertyType=String,PropertyValue="${WorkingDir}/Results/Test_RunProgram_CommandLine_echo_OutputCheckTable_out.txt")
# Generate the output
RunProgram(CommandLine="echo ThisIsAnError_AndThisIsAWarning_AndThisIsASuccess > ${TestOutputFile}",ExitCodeProperty="RunProgramExitCode",OutputCheckTableID="OutputChecksTable",OutputCheckWarningCountProperty="OutputCheckWarningCount",OutputCheckFailureCountProperty="OutputCheckFailureCount")
# Uncomment the following command to regenerate the expected results file.
# CopyFile(InputFile="${TestOutputFile}",OutputFile="ExpectedResults/Test_RunProgram_CommandLine_echo_OutputCheckTable_out.txt",IfInputNotFound=Fail)
CompareFiles(InputFile1="ExpectedResults/Test_RunProgram_CommandLine_echo_OutputCheckTable_out.txt",InputFile2="${TestOutputFile}",IfDifferent=Warn)
If(Name="RunProgramWarningCheck",Condition="${OutputCheckWarningCount} > 0")
Message(Message="${RunProgramWarningCheck} warnings detected - might need to fix!",CommandStatus=WARNING)
EndIf(Name="RunProgramWarningCheck")
If(Name="RunProgramFailureCheck",Condition="${OutputCheckFailureCount} > 0")
Message(Message="${RunProgramFailureCheck} failures detected - definitely need to fix!",CommandStatus=FAILURE)
EndIf(Name="RunProgramFailureCheck")
WriteCheckFile(OutputFile="Results/Test_RunProgram_CommandLine_echo_OutputCheckTable_out.csv",WriteHeaderComments=False)
WriteCheckFile(OutputFile="Results/Test_RunProgram_CommandLine_echo_OutputCheckTable_out.html",Title="Check File")
# Additional check is done in command file with same name and "2" on end in order to compare check file output.
