# File generated by...
# program:      TSTool 13.03.00dev (2019-09-29)
# user:         sam
# date:         Wed Oct 02 16:59:59 America/Denver 2019
# host:         RoaringFork
# directory:    C:\Users\sam\cdss-dev\TSTool\git-repos\cdss-app-tstool-test\test\regression\commands\general\SetTableValues
# command line: TSTool
#  -home test/operational/CDSS
# -----------------------------------------------------------------------
# Command file name: "C:\Users\sam\cdss-dev\TSTool\git-repos\cdss-app-tstool-test\test\regression\commands\general\SetTableValues\Test_SetTableValues_Arrays.TSTool"
# Commands: 
# # Test setting values in a table
# # - Empty table for various column types is created
# # - Set array values
# # - doubleArray2 and stringArray2 have null values
# StartLog(LogFile="Results/Test_SetTableValues_Arrays.TSTool.log")
# RemoveFile(InputFile="Results/Test_SetTableValues_Arrays_out.csv",IfNotFound=Ignore)
# NewTable(TableID="Table1",Columns="row,integer;boolean1,boolean;datetime1,datetime;double1,double;float1,float;integer1,integer;long1,long;short1,short;string1,string;booleanArray,[boolean];booleanArray2,[boolean];datetimeArray,[datetime];datetimeArray2,[datetime];doubleArray,[double];doubleArray2,[double];floatArray,[float];floatArray2,[float];integerArray,[integer];integerArray2,[integer];longArray,[long];longArray2,[long];shortArray,[short];shortArray2,[short];stringArray,[string];stringArray2,[string]")
# InsertTableRow(TableID="Table1",ColumnValues="row:1")
# SetTableValues(TableID="Table1",ColumnFilters="row:1",Column="boolean1",Value="true")
# SetTableValues(TableID="Table1",ColumnFilters="row:1",Column="datetime1",Value="2091-01-01")
# SetTableValues(TableID="Table1",ColumnFilters="row:1",Column="double1",Value="1.11")
# SetTableValues(TableID="Table1",ColumnFilters="row:1",Column="float1",Value="2.22")
# SetTableValues(TableID="Table1",ColumnFilters="row:1",Column="integer1",Value="3")
# SetTableValues(TableID="Table1",ColumnFilters="row:1",Column="long1",Value="4")
# SetTableValues(TableID="Table1",ColumnFilters="row:1",Column="short1",Value="5")
# SetTableValues(TableID="Table1",ColumnFilters="row:1",Column="string1",Value="test string")
# SetTableValues(TableID="Table1",ColumnFilters="row:1",Column="booleanArray",Value="[true,false,true]")
# SetTableValues(TableID="Table1",ColumnFilters="row:1",Column="booleanArray2",Value="[true,false,null]")
# SetTableValues(TableID="Table1",ColumnFilters="row:1",Column="datetimeArray",Value="[2019-02-01,2019-03-01 01:02:03]")
# SetTableValues(TableID="Table1",ColumnFilters="row:1",Column="datetimeArray2",Value="[null,2019-02-01,2019-03-01 01:02:03]")
# SetTableValues(TableID="Table1",ColumnFilters="row:1",Column="doubleArray",Value="[1.0,2.0,3.0]")
# SetTableValues(TableID="Table1",ColumnFilters="row:1",Column="doubleArray2",Value="[10.0,null,NaN]")
# SetTableValues(TableID="Table1",ColumnFilters="row:1",Column="floatArray",Value="[1.1,2.1,3.1]")
# SetTableValues(TableID="Table1",ColumnFilters="row:1",Column="floatArray2",Value="[10.1,null,NaN]")
# SetTableValues(TableID="Table1",ColumnFilters="row:1",Column="integerArray",Value="[31,32,33]")
# SetTableValues(TableID="Table1",ColumnFilters="row:1",Column="integerArray2",Value="[310,320,null]")
# SetTableValues(TableID="Table1",ColumnFilters="row:1",Column="longArray",Value="[3100,3200,3300]")
# SetTableValues(TableID="Table1",ColumnFilters="row:1",Column="longArray2",Value="[31000,null]")
# SetTableValues(TableID="Table1",ColumnFilters="row:1",Column="shortArray",Value="[3199,3299,3399]")
# SetTableValues(TableID="Table1",ColumnFilters="row:1",Column="shortArray2",Value="[4199,null]")
# SetTableValues(TableID="Table1",ColumnFilters="row:1",Column="stringArray",Value="[test string1,test string2,test string3]")
# SetTableValues(TableID="Table1",ColumnFilters="row:1",Column="stringArray2",Value="[test string10,null]")
# # Uncomment the following to generate the expected results.
# WriteTableToDelimitedFile(TableID="Table1",OutputFile="ExpectedResults\Test_SetTableValues_Arrays_out.csv")
# WriteTableToDelimitedFile(TableID="Table1",OutputFile="Results\Test_SetTableValues_Arrays_out.csv")
# # Do regression comparison with the original input
# CompareFiles(InputFile1="ExpectedResults\Test_SetTableValues_Arrays_out.csv",InputFile2="Results/Test_SetTableValues_Arrays_out.csv",IfDifferent=Warn)
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20180529 on localhost\CDSS
# HydroBase.db_version:  design version: 20161025  last data change: 20180529
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20180529 on localhost\CDSS
# HydroBase.db_version:  design version: 20161025  last data change: 20180529
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
"row","boolean1","datetime1","double1","float1","integer1","long1","short1","string1","booleanArray","booleanArray2","datetimeArray","datetimeArray2","doubleArray","doubleArray2","floatArray","floatArray2","integerArray","integerArray2","longArray","longArray2","shortArray","shortArray2","stringArray","stringArray2"
1,true,2091-01-01,1.11,2.22,3,4,5,test string,"[true,false,true]","[true,false,]","[""2019-02-01"",""2019-03-01 01:02:03""]","[,""2019-02-01"",""2019-03-01 01:02:03""]","[1.000000,2.000000,3.000000]","[10.000000,,]","[1.100000,2.100000,3.100000]","[10.100000,,]","[31,32,33]","[310,320,]","[3100,3200,3300]","[31000,]","[0,0,0]","[0,0]","[""test string1"",""test string2"",""test string3""]","[""test string10"",]"
