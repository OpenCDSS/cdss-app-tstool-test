# Test writing a daily time series to HydroJSON format
StartLog(LogFile="Results/Test_WriteTimeSeriesToHydroJSON_Day.TSTool.log")
RemoveFile(InputFile="Results/Test_WriteTimeSeriesToHydroJSON_Day_out.dv",IfNotFound=Ignore)
# Read test data generated from Reclamation Pisces since HydroJSON is one of the options to output from Pisces
ReadDateValue(InputFile="Data\TestData-Pisces.dv")
# NewPatternTimeSeries(Alias="MyLoc",NewTSID="MyLoc..MyData.Day",Description="Test data",SetStart="1950-01-01",SetEnd="1951-03-12",Units="CFS",PatternValues="5,10,12,13,75")
# Uncomment the following command to regenerate the expected results file.
# WriteTimeSeriesToHydroJSON(OutputFile="ExpectedResults\Test_WriteTimeSeriesToHydroJSON_Day_out.dv")
# Generate new output...
WriteTimeSeriesToHydroJSON(Precision=4,TParameter="${ts:parameter}",SName="${ts:siteid}",SResponsibility="${ts:responsibility}",SCoordLatitude=${ts:latitude},SCoordLongitude=${ts:longitude},SCoordDatum="${ts:horizontal_datum}",SElevValue=${ts:elevation},SElevAccuracy=${ts:vertical_accuracy},SElevDatum="${ts:vertical_datum}",SElevMethod="${ts:elevation_method}",STimeZone="${ts:timezone}",STimeZoneOffset="${ts:tz_offset}",SActiveFlag="${ts:active_flag}",SLocationType="${ts:type}",OutputFile="Results/Test_WriteTimeSeriesToHydroJSON_Day_out.json",PrintNice=True)
# Do regression comparison...
# CompareFiles(InputFile1="ExpectedResults\Test_WriteTimeSeriesToHydroJSON_Day_out.dv",InputFile2="Results/Test_WriteTimeSeriesToHydroJSON_Day_out.dv",IfDifferent=Warn)
