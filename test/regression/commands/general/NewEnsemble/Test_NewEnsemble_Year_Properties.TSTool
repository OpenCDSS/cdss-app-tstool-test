# Test creating an ensemble from year interval time series
# - Set parameters using ${Property} notation
StartLog(LogFile="Results/Test_NewEnsemble_Year_Properties.TSTool.log")
RemoveFile(InputFile="Results/Test_NewEnsemble_Year_Properties_out.dv",IfNotFound=Ignore)
SetProperty(PropertyName="TestTSID",PropertyType=String,PropertyValue="ts1")
SetProperty(PropertyName="TestEnsembleID",PropertyType=String,PropertyValue="TestEnsemble")
SetProperty(PropertyName="TestEnsembleName",PropertyType=String,PropertyValue="Test Ensemble")
NewPatternTimeSeries(Alias="${TestTSID}",NewTSID="ts1..Flow.Year",SetStart="1960",SetEnd="2000",Units="ACFT",PatternValues="1,2,5,8,,20")
# NewPatternTimeSeries(Alias="ts2",NewTSID="ts2..Flow.Year",SetStart="1950",SetEnd="2005",Units="ACFT",PatternValues="2,4,10,16,,40")
NewEnsemble(TSList=AllMatchingTSID,TSID="${TestTSID}",NewEnsembleID="${TestEnsembleID}",NewEnsembleName="${TestEnsembleName}")
# Generate the results.
# Uncomment the following to regenerate expected results.
# WriteDateValue(TSList=EnsembleID,EnsembleID="TestEnsemble",OutputFile="ExpectedResults\Test_NewEnsemble_Year_Properties_out.dv")
WriteDateValue(TSList=EnsembleID,EnsembleID="TestEnsemble",OutputFile="Results\Test_NewEnsemble_Year_Properties_out.dv")
# Uncomment the following to recreate expected results
CompareFiles(InputFile1="ExpectedResults/Test_NewEnsemble_Year_Properties_out.dv",InputFile2="Results/Test_NewEnsemble_Year_Properties_out.dv",IfDifferent=Warn)
