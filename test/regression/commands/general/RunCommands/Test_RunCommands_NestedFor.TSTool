# Test RunCommands with nested For loops
# - Use RunCommands() to try removing a nonexistent file
# - Command status messages should be visible on each RunCommands command and also TSTool Problems tab
# Disable below because not sure if RunCommands in the test suite will work OK since nested RunCommands
#@enabled False
#@expectedStatus Failure
StartLog(LogFile="Results/Test_RunCommands_NestedFor.TSTool.log")
# SetDebugLevel(LogFileLevel=1)
For(Name="TestForBasins",IteratorProperty="Basin",List="Basin1,Basin2,Basin3,Basin4")
Message(Message="Test logging Basin=${Basin}",CommandStatus=SUCCESS)
# The following will generate a WARNING log message
RunCommands(InputFile="Data\Test_RunCommands_RemoveFile_Warning.TSTool")
For(Name="TestForStations",IteratorProperty="Station",List="Station1,Station2,Station3,Station4")
Message(Message="Test logging Basin=${Basin} Station=${Station}",CommandStatus=SUCCESS)
# The following will generate a FAILURE log message
RunCommands(InputFile="Data\Test_RunCommands_RemoveFile_Failure.TSTool")
For(Name="TestForSensors",IteratorProperty="Sensor",List="Sensor1,Sensor2,Sensor3,Sensor4")
# The following will be successful because it ignores the missing file
RunCommands(InputFile="Data\Test_RunCommands_RemoveFile_Ignore.TSTool")
Message(Message="Test logging Basin=${Basin} Station=${Station} Sensor=${Sensor}",CommandStatus=SUCCESS)
EndFor(Name="TestForSensors")
EndFor(Name="TestForStations")
EndFor(Name="TestForBasins")
