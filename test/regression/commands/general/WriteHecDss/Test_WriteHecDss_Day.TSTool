# Test setup...
StartLog(LogFile="Results/Test_WriteHecDss_Day.TSTool.log")
# SetDebugLevel(LogFileLevel=10)
RemoveFile(InputFile="Results\Test_WriteHecDss_Day_out.dss")
RemoveFile(InputFile="Results/Test_WriteHecDss_Day_out.dv",IfNotFound=Ignore)
# The generated time series has identifier parts that indicate the HEC-DSS
# parts, other than the D part, which is related to the period of record.
TS Alias1 = NewPatternTimeSeries(NewTSID="Apart1:Bpart1-with-dashes..Cpart1.Day.Fpart1",Description="Test data",SetStart="1950-01-01",SetEnd="1950-03-12",Units="CFS",PatternValues="5,10,12,13,75")
TS Alias2 = NewPatternTimeSeries(NewTSID="Apart2-with-dashes:Bpart2..Cpart2.Day.Fpart2",Description="Test data",SetStart="1950-01-01",SetEnd="1950-03-12",Units="CFS",PatternValues="10,20,24,26,150")
WriteHecDss(OutputFile="Results/Test_WriteHecDss_Day_out.dss",Type=PER-AVER,Close=True)
# Since the file is binary and may contain characters that vary over time (write time, etc.),
# free current time series and read it again and write as DateValue for the comparison
Free(TSList=AllTS)
# Specify the period below because the current software seems to increase the
# period on read - data values end up in the correct locations but extra missing
# data is added.
ReadHecDss(InputFile="Results/Test_WriteHecDss_Day_out.dss",InputStart="1950-01-01",InputEnd="1950-03-12")
# Uncomment the following command to regenerate the expected results file.
# WriteDateValue(OutputFile="ExpectedResults\Test_WriteHecDss_Day_out.dv",MissingValue=NaN)
# Generate new output...
WriteDateValue(OutputFile="Results\Test_WriteHecDss_Day_out.dv",MissingValue=NaN)
# Do regression comparison...
CompareFiles(InputFile1="ExpectedResults\Test_WriteHecDss_Day_out.dv",InputFile2="Results/Test_WriteHecDss_Day_out.dv",WarnIfDifferent=True)
#
# Use DSSUTL to output the data inside of the resulting DSS file as another direct
# comparison of the results, independent of TSTool.

# SKC: want to run either of the following RunProgram commands--the first would be preferable to prevent having to create a single line batch file.
# RunProgram(CommandLine="\" \"${WorkingDir}\DSSUTL\" \"${WorkingDir}\Results\Test_WriteHecDss_Day_out.dss\" \"I=${WorkingDir}\Test_WriteHecDss_Day.MCO\" \"",Timeout=10,ExitStatusIndicator="Status:")
# RunProgram(CommandLine="\" \"${WorkingDir}\DSSUTL\" \"${WorkingDir}\Results\Test_WriteHecDss_Day_out.dss\" \"I=${WorkingDir}\Test_WriteHecDss_Day.MCO\" \"",Program=${WorkingDir}\DSSUTL,ProgramArg1=${WorkingDir}\Results\Test_WriteHecDss_Day_out.dss,ProgramArg2=I=${WorkingDir}\Test_WriteHecDss_Day.MCO,Timeout=10,ExitStatusIndicator="Status:")
# RunProgram(CommandLine="${WorkingDir}\Test_WriteHecDss_Day.bat")
# In order to regenerate the expected results file, edit the output file in the file: Test_WriteHecDss_Day.MCO
CompareFiles(InputFile1="ExpectedResults\Test_WriteHecDss_Day.dssutl.out",InputFile2="Results/Test_WriteHecDss_Day.dssutl.out",WarnIfDifferent=True)
