# Test using a different interval for the input time series from the LagInterval
StartLog(LogFile="Results\Test_VariableLagK_6HourIntervalAndDayTable.TSTool.log")
RemoveFile(InputFile="Results\Test_VariableLagK_6HourIntervalAndDayTable_out.dv",IfNotFound=Ignore)
#
# Read NWSCard input file
TS Inflow = ReadNwsCard(InputFile="Data\Streamflow.SQIN")
# Do routing using daily routing times and hourly routing times in the table
VariableLagK(TSID="Inflow",NewTSID="TestLoc..SQIN.6Hour.routed",FlowUnits=CMS,LagInterval=Day,Lag="0,3",K="0,2",Alias="Routed_DayTable")
VariableLagK(TSID="Inflow",NewTSID="TestLoc..SQIN.6Hour.routed",FlowUnits=CMS,LagInterval=Hour,Lag="0,72",K="0,48",Alias="Routed_HourTable")
Free(TSList=AllMatchingTSID,TSID="Inflow")
CompareTimeSeries(MatchLocation=False,MatchDataType=True,Tolerance="0.001",AnalysisStart="1990-12-01",WarnIfDifferent=True)
#
SelectTimeSeries(TSList=AllMatchingTSID,TSID="Routed_DayTable")
# Uncomment the following command to regenerate the expected results file.
# WriteDateValue(OutputFile="ExpectedResults\Test_VariableLagK_6HourIntervalAndDayTable_out.dv",TSList=SelectedTS)
WriteDateValue(OutputFile="Results\Test_VariableLagK_6HourIntervalAndDayTable_out.dv",TSList=SelectedTS)
CompareFiles(InputFile1="ExpectedResults\Test_VariableLagK_6HourIntervalAndDayTable_out.dv",InputFile2="Results\Test_VariableLagK_6HourIntervalAndDayTable_out.dv",WarnIfDifferent=True)
