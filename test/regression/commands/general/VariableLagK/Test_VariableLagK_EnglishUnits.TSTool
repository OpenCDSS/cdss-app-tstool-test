# Test specifying Lag, K units as English instead of Metric units
# Data are in CMS, table is in CFS
StartLog(LogFile="Results/Test_VariableLagK_EnglishUnits.TSTool.log")
RemoveFile(InputFile="Results\Test_VariableLagK_EnglishUnits_out.dv",IfNotFound=Ignore)
#
# Read NWSCard input file
TS Inflow = ReadNwsCard(InputFile="Data\Streamflow.SQIN")
#
# Route using the same routing parameters used in the mcp3 input deck
# Lag(hrs) K(hrs) Q(cfs)
# Lag
# K
#    36.0 10000.0    12.0 50000.0
#     9.0 20000.0    24.0 60000.0
#
VariableLagK(TSID="Inflow",NewTSID="TestLoc..SQIN.6Hour.routed",FlowUnits=CFS,LagInterval=Hour,Lag="10000,36; 50000,12;",K="20000,9; 60000,24",Alias="EnglishUnits")
# Free the original time series so that it is not used in the comparison.
Free(TSList=AllMatchingTSID,TSID="Inflow")
#
# Read the output from mcp3 LAG/K command
TS mcp3_output = ReadNwsCard(InputFile="Data\ENGLISH_UNITS.SQIN")
CompareTimeSeries(MatchLocation=False,MatchDataType=True,Tolerance="0.025",AnalysisStart="1990-12-01",WarnIfDifferent=True)
# The following can be used to look at the percent error * 100--inconsequential.
# Subtract(TSID="EnglishUnits",SubtractTSList=AllMatchingTSID,SubtractTSID="mcp3_output",HandleMissingHow="IgnoreMissing")
# Divide(TSID="EnglishUnits",DivisorTSID="mcp3_output")
# Scale(TSList=AllMatchingTSID,TSID="EnglishUnits",ScaleValue=10000)
#
# The following does an exact test of the results:
SelectTimeSeries(TSList=AllMatchingTSID,TSID="EnglishUnits")
# Uncomment the following command to regenerate the expected results file.
# WriteDateValue(OutputFile="ExpectedResults\Test_VariableLagK_EnglishUnits_out.dv",TSList=SelectedTS)
WriteDateValue(OutputFile="Results\Test_VariableLagK_EnglishUnits_out.dv",TSList=SelectedTS)
CompareFiles(InputFile1="ExpectedResults\Test_VariableLagK_EnglishUnits_out.dv",InputFile2="Results\Test_VariableLagK_EnglishUnits_out.dv",WarnIfDifferent=True)
