# Test creating a day interval time series using a pattern of values
# - Set the alias using ${Property}
# - Set the new TSID using ${Property}
# - Set the data units using ${Property}
# - Set the missing value using ${Property}
# - Set the set period using ${Property}
StartLog(LogFile="Results/Test_NewPatternTimeSeries_Day_Properties.TSTool.log")
RemoveFile(InputFile="Results/Test_NewPatternTimeSeries_Day_Properties_out.dv",IfNotFound=Ignore)
SetProperty(PropertyName="TestLocID",PropertyType=String,PropertyValue="loc1")
SetProperty(PropertyName="TestDataType",PropertyType=String,PropertyValue="Streamflow")
SetProperty(PropertyName="TestDescription",PropertyType=String,PropertyValue="Test description abc")
SetProperty(PropertyName="TestSetStart",PropertyType=DateTime,PropertyValue="1950-01-01")
SetProperty(PropertyName="TestSetEnd",PropertyType=DateTime,PropertyValue="1951-03-12")
SetProperty(PropertyName="TestUnits",PropertyType=String,PropertyValue="CFS")
SetProperty(PropertyName="TestMissing",PropertyType=String,PropertyValue="NaN")
NewPatternTimeSeries(Alias="${TestLocID}",NewTSID="${TestLocID}..${TestDataType}.Day",Description="${TestDescription}",SetStart="${TestSetStart}",SetEnd="${TestSetEnd}",Units="${TestUnits}",MissingValue=${TestMissing},PatternValues="5,10,12,13,75")
# Uncomment the following command to regenerate the expected results file.
# WriteDateValue(OutputFile="ExpectedResults/Test_NewPatternTimeSeries_Day_Properties_out.dv")
WriteDateValue(OutputFile="Results/Test_NewPatternTimeSeries_Day_Properties_out.dv")
CompareFiles(InputFile1="ExpectedResults/Test_NewPatternTimeSeries_Day_Properties_out.dv",InputFile2="Results/Test_NewPatternTimeSeries_Day_Properties_out.dv",IfDifferent=Warn)
