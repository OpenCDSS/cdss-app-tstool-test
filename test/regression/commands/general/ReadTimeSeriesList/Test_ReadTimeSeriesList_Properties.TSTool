# Read a list of time series
# - use a CSV file for the location list and DateValue file for time series
# - specify the table ID using ${Property}
# - specify the time series properties using ${Property}
# - specify the time series count property using ${Property}
# - specify the time series index property using ${Property}
# - specify the default output period using ${Property}
StartLog(LogFile="Results/Test_ReadTimeSeriesList_Properties.TSTool.log")
RemoveFile(InputFile="Results\Test_ReadTimeSeriesList_Properties_out.dv",IfNotFound=Ignore)
SetProperty(PropertyName="TestTableID",PropertyType=String,PropertyValue="StationList")
SetProperty(PropertyName="TestTimeSeriesCountProperty",PropertyType=String,PropertyValue="TimeSeriesCount")
SetProperty(PropertyName="TestTimeSeriesDefaultCountProperty",PropertyType=String,PropertyValue="TimeSeriesDefaultCount")
SetProperty(PropertyName="TestTimeSeriesReadCountProperty",PropertyType=String,PropertyValue="TimeSeriesReadCount")
SetProperty(PropertyName="TestTimeSeriesIndexProperty",PropertyType=String,PropertyValue="ReadIndex")
SetProperty(PropertyName="TestDefaultStart",PropertyType=DateTime,PropertyValue="2000-01-01")
SetProperty(PropertyName="TestDefaultEnd",PropertyType=DateTime,PropertyValue="2000-03-15")
ReadTableFromDelimitedFile(TableID="${TestTableID}",InputFile="Data\testdata2.csv")
ReadTimeSeriesList(TableID="${TestTableID}",LocationColumn="TSID",DataSource="NWIS",DataType="00060-00003",Interval="Day",DataStore="DateValue",InputName="Data/testdata.dv",ColumnProperties="*:*",Properties="TestProperty:TestPropertyValue",IfNotFound=Default,DefaultOutputStart="${TestDefaultStart}",DefaultOutputEnd="${TestDefaultEnd}",TimeSeriesCountProperty="${TestTimeSeriesCountProperty}",TimeSeriesReadCountProperty="${TestTimeSeriesReadCountProperty}",TimeSeriesDefaultCountProperty="${TestTimeSeriesDefaultCountProperty}",TimeSeriesIndex1Property="${TestTimeSeriesIndexProperty}")
# Uncomment the following command to regenerate the expected results file.
# WriteDateValue(OutputFile="ExpectedResults\Test_ReadTimeSeriesList_Properties_out.dv")
WriteDateValue(OutputFile="Results\Test_ReadTimeSeriesList_Properties_out.dv")
CompareFiles(InputFile1="ExpectedResults\Test_ReadTimeSeriesList_Properties_out.dv",InputFile2="Results\Test_ReadTimeSeriesList_Properties_out.dv",IfDifferent=Warn)
# Also write a properties file with the time series count
# Uncomment the following command to regenerate the expected results file.
# WritePropertiesToFile(OutputFile="ExpectedResults/Test_ReadTimeSeriesList_PropertiesList_props_out.txt",IncludeProperties="TimeSeries*Count",FileFormat=NameValue)
WritePropertiesToFile(OutputFile="Results/Test_ReadTimeSeriesList_PropertiesList_props_out.txt",IncludeProperties="TimeSeries*Count",FileFormat=NameValue)
CompareFiles(InputFile1="ExpectedResults\Test_ReadTimeSeriesList_PropertiesList_props_out.txt",InputFile2="Results\Test_ReadTimeSeriesList_PropertiesList_props_out.txt",IfDifferent=Warn)
