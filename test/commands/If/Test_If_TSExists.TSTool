# Test If TSExists feature
StartLog(LogFile="Results/Test_If_TSExists.TSTool.log")
NewPatternTimeSeries(Alias="ts1",NewTSID="ts1..flow.Year",Description="Test time series 1",SetStart="2000",SetEnd="2010",Units="cfs",MissingValue=NaN,PatternValues="1,2,3")
NewPatternTimeSeries(Alias="ts2",NewTSID="ts2..flow.Year",Description="Test time series 2",SetStart="2000",SetEnd="2010",Units="cfs",MissingValue=NaN,PatternValues="5,6,7")
SetProperty(PropertyName="AliasFound",PropertyType=Boolean,PropertyValue="False")
SetProperty(PropertyName="TSIDFound",PropertyType=Boolean,PropertyValue="False")
SetProperty(PropertyName="MissingTSIDFound",PropertyType=Boolean,PropertyValue="False")
# Try to match Alias that does exist - should result in property set to True
If(Name="AliasCheck",TSExists="ts1")
SetProperty(PropertyName="AliasFound",PropertyType=Boolean,PropertyValue="True")
Message(Message="Alias for ts1 found:  ${AliasFound}")
EndIf(Name="AliasCheck")
# Try to match TSID that does exist - should result in property set to True
If(Name="TSIDCheck",TSExists="ts2..flow.Year")
SetProperty(PropertyName="TSIDFound",PropertyType=Boolean,PropertyValue="True")
Message(Message="TSID for ts2 found:  ${TSIDFound}")
EndIf(Name="TSIDCheck")
# Try to match TSID that does not exist - should result in property set to False
If(Name="MissingTSIDCheck",TSExists="xxx")
SetProperty(PropertyName="MissingTSIDFound",PropertyType=Boolean,PropertyValue="True")
Message(Message="Missing TSID found:  ${MissingTSIDFound}")
EndIf(Name="MissingTSIDCheck")
# Uncomment the next command to regenerate expected results
# WritePropertiesToFile(OutputFile="ExpectedResults/Test_If_TSExists_out.txt",IncludeProperties="AliasFound,TSIDFound,MissingTSIDFound")
WritePropertiesToFile(OutputFile="Results/Test_If_TSExists_out.txt",IncludeProperties="AliasFound,TSIDFound,MissingTSIDFound")
CompareFiles(InputFile1="ExpectedResults/Test_If_TSExists_out.txt",InputFile2="Results/Test_If_TSExists_out.txt",IfDifferent=Warn)
