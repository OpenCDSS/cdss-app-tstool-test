# Test If table exists feature:
# - properties are set to ensure that expected values occur when tests are run
StartLog(LogFile="Results/Test_If_Table_Exists.TSTool.log")
SetProperty(PropertyName="TableExists",PropertyType=Boolean,PropertyValue="False")
SetProperty(PropertyName="MissingTableExists",PropertyType=Boolean,PropertyValue="False")
SetProperty(PropertyName="TableDoesNotExist",PropertyType=Boolean,PropertyValue="False")
SetProperty(PropertyName="MissingTableDoesNotExist",PropertyType=Boolean,PropertyValue="False")
#
# Create a simple table to use in the tests.
ReadTableFromDelimitedFile(TableID="TestIfTable",InputFile="Data\test-table.csv")
# Try to find a table that exists (and does) - should result in property set to True to pass the test.
If(Name="TableExistsCheck",TableExists="TestIfTable")
SetProperty(PropertyName="TableExists",PropertyType=Boolean,PropertyValue="True")
Message(Message="TableExists:  ${TableExists}")
EndIf(Name="TableExistsCheck")
# Try to find a file that exists (but does not) - should result in property set to False to pass the test.
If(Name="MissingTableExistsCheck",TableExists="xxx")
SetProperty(PropertyName="MissingTableExists",PropertyType=Boolean,PropertyValue="True")
Message(Message="MissingTableExists:  ${MissingTableExists}")
EndIf(Name="MissingTableExistsCheck")
# Try to find a file that does not exist (but does) - should result in property set to False to pass the test.
If(Name="TableDoesNotExistCheck",TableDoesNotExist="TestIfTable")
SetProperty(PropertyName="TableDoesNotExist",PropertyType=Boolean,PropertyValue="False")
Message(Message="TableDoesNotExist:  ${TableDoesNotExist}")
EndIf(Name="TableDoesNotExistCheck")
# Try to find a table that does not exist (and does not) - should result in property set to True to pass the test.
If(Name="MissingTableDoesNotExistCheck",TableDoesNotExist="xxx")
SetProperty(PropertyName="MissingTableDoesNotExist",PropertyType=Boolean,PropertyValue="True")
Message(Message="MissingTableDoesNotExist:  ${MissingTableDoesNotExist}")
EndIf(Name="MissingTableDoesNotExistCheck")
# Uncomment the next command to regenerate expected results
# WritePropertiesToFile(OutputFile="ExpectedResults/Test_If_Table_Exists_out.txt",IncludeProperties="TableExists,MissingTableExists,TableDoesNotExist,MissingTableDoesNotExist")
WritePropertiesToFile(OutputFile="Results/Test_If_Table_Exists_out.txt",IncludeProperties="TableExists,MissingTableExists,TableDoesNotExist,MissingTableDoesNotExist")
CompareFiles(InputFile1="ExpectedResults/Test_If_Table_Exists_out.txt",InputFile2="Results/Test_If_Table_Exists_out.txt",IfDifferent=Warn)
