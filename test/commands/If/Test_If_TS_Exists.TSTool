# Test If TSExists feature
StartLog(LogFile="Results/Test_If_TS_Exists.TSTool.log")
NewPatternTimeSeries(Alias="ts1",NewTSID="ts1..flow.Year",Description="Test time series 1",SetStart="2000",SetEnd="2010",Units="cfs",MissingValue=NaN,PatternValues="1,2,3")
NewPatternTimeSeries(Alias="ts2",NewTSID="ts2..flow.Year",Description="Test time series 2",SetStart="2000",SetEnd="2010",Units="cfs",MissingValue=NaN,PatternValues="5,6,7")
SetProperty(PropertyName="AliasExists",PropertyType=Boolean,PropertyValue="False")
SetProperty(PropertyName="MissingAliasExists",PropertyType=Boolean,PropertyValue="False")
SetProperty(PropertyName="AliasDoesNotExist",PropertyType=Boolean,PropertyValue="False")
SetProperty(PropertyName="MissingAliasDoesNotExist",PropertyType=Boolean,PropertyValue="False")
SetProperty(PropertyName="TSIDExists",PropertyType=Boolean,PropertyValue="False")
SetProperty(PropertyName="MissingTSIDExists",PropertyType=Boolean,PropertyValue="False")
SetProperty(PropertyName="TSIDDoesNotExist",PropertyType=Boolean,PropertyValue="False")
SetProperty(PropertyName="MissingTSIDDoesNotExist",PropertyType=Boolean,PropertyValue="False")
# Try to match Alias that does exist (and does) - should result in property set to True to pass the test.
If(Name="AliasExistsCheck",TSExists="ts1")
SetProperty(PropertyName="AliasExists",PropertyType=Boolean,PropertyValue="True")
Message(Message="AliasExists:  ${AliasExists}")
EndIf(Name="AliasExistsCheck")
# Try to match Alias that does not exist (but does not) - should result in property set to False to pass the test.
If(Name="MissingAliasExistsCheck",TSExists="xxx")
SetProperty(PropertyName="MissingAliasExists",PropertyType=Boolean,PropertyValue="True")
Message(Message="MissingAliasExists:  ${MissingAliasExists}")
EndIf(Name="MissingAliasExistsCheck")
# Try to match Alias that does not exist (but does) - should result in property set to False to pass the test.
If(Name="AliasDoesNotExistCheck",TSDoesNotExist="ts1")
SetProperty(PropertyName="AliasDoesNotExist",PropertyType=Boolean,PropertyValue="False")
Message(Message="AliasDoesNotExist:  ${AliasDoesNotExist}")
EndIf(Name="AliasDoesNotExistCheck")
# Try to match Alias that does not exist (and does not) - should result in property set to True to pass the test.
If(Name="MissingAliasDoesNotExistCheck",TSDoesNotExist="xxx")
SetProperty(PropertyName="MissingAliasDoesNotExist",PropertyType=Boolean,PropertyValue="True")
Message(Message="MissingAliasDoesNotExist:  ${MissingAliasDoesNotExist}")
EndIf(Name="MissingAliasDoesNotExistCheck")
# Try to match TSID that does exist (and does) - should result in property set to True to pass the test.
If(Name="TSIDExistsCheck",TSExists="ts2..flow.Year")
SetProperty(PropertyName="TSIDExists",PropertyType=Boolean,PropertyValue="True")
Message(Message="TSIDExists:  ${TSIDExists}")
EndIf(Name="TSIDExistsCheck")
# Try to match TSID that not exist (but does not) - should result in property set to False to pass the test.
If(Name="MissingTSIDExistsCheck",TSExists="xxx")
SetProperty(PropertyName="MissingTSIDExists",PropertyType=Boolean,PropertyValue="True")
Message(Message="MissingTSIDExists:  ${MissingTSIDExists}")
EndIf(Name="MissingTSIDExistsCheck")
# Try to match TSID that does not exist (but does) - should result in property set to False to pass the test.
If(Name="TSIDDoesNotExistCheck",TSDoesNotExist="ts1")
SetProperty(PropertyName="TSIDDoesNotExist",PropertyType=Boolean,PropertyValue="False")
Message(Message="TSIDDoesNotExist:  ${TSIDDoesNotExist}")
EndIf(Name="TSIDDoesNotExistCheck")
# Try to match TSID that does not exist (and does not) - should result in property set to True to pass the test.
If(Name="MissingTSIDDoesNotExistCheck",TSDoesNotExist="xxx")
SetProperty(PropertyName="MissingTSIDDoesNotExist",PropertyType=Boolean,PropertyValue="True")
Message(Message="MissingTSIDDoesNotExist:  ${MissingTSIDDoesNotExist}")
EndIf(Name="MissingTSIDDoesNotExistCheck")
# Uncomment the next command to regenerate expected results.
# WritePropertiesToFile(OutputFile="ExpectedResults/Test_If_TS_Exists_out.txt",IncludeProperties="AliasExists,MissingAliasExists,AliasDoesNotExist,MissingAliasDoesNotExist,TSIDExists,MissingTSIDExists,TSIDDoesNotExist,MissingTSIDDoesNotExist")
WritePropertiesToFile(OutputFile="Results/Test_If_TS_Exists_out.txt",IncludeProperties="AliasExists,MissingAliasExists,AliasDoesNotExist,MissingAliasDoesNotExist,TSIDExists,MissingTSIDExists,TSIDDoesNotExist,MissingTSIDDoesNotExist")
CompareFiles(InputFile1="ExpectedResults/Test_If_TS_Exists_out.txt",InputFile2="Results/Test_If_TS_Exists_out.txt",IfDifferent=Warn)
