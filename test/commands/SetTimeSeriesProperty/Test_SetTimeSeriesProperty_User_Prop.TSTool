# Test setting user-defined time series properties
# - set using %, %{ts:property} and ${property} properties
# - try with different object types, including date/time
StartLog(LogFile="Results/Test_SetTimeSeriesProperty_User_Prop.TSTool.log")
RemoveFile(InputFile="Results/Test_SetTimeSeriesProperty_User_Prop_out.dv",IfNotFound=Ignore)
NewPatternTimeSeries(Alias="ts1",NewTSID="ts1..Precip.Day",Description="test data 1",SetStart="2000-01-01",SetEnd="2000-01-13",Units="cfs",PatternValues="1,2,3,2,1,-999,5,1,-999,-999,-999,1,3,5")
NewPatternTimeSeries(Alias="ts2",NewTSID="ts2..TempMin.Day",Description="test data 1",SetStart="2000-01-01",SetEnd="2000-01-25",Units="cfs",PatternValues="1,2,3,2,1,-999,5,1,-999,-999,-999,1,3,5")
SetInputPeriod(InputStart="2000-01-01",InputEnd="2010-12-31")
SetTimeSeriesProperty(PropertyName="TestDateTime",PropertyType=DateTime,PropertyValue="${InputStart}")
SetTimeSeriesProperty(PropertyName="TestDouble",PropertyType=Double,PropertyValue="100.01")
SetTimeSeriesProperty(PropertyName="TestDouble2",PropertyType=Double,PropertyValue="${ts:TestDouble}")
SetTimeSeriesProperty(PropertyName="TestInteger",PropertyType=Integer,PropertyValue="201")
SetTimeSeriesProperty(PropertyName="TestInteger2",PropertyType=Integer,PropertyValue="${ts:TestInteger}")
SetTimeSeriesProperty(PropertyName="TestString",PropertyType=String,PropertyValue="%U")
# Uncomment the following command to regenerate expected results.
# WriteDateValue(OutputFile="ExpectedResults/Test_SetTimeSeriesProperty_User_Prop_out.dv")
WriteDateValue(OutputFile="Results/Test_SetTimeSeriesProperty_User_Prop_out.dv")
CompareFiles(InputFile1="ExpectedResults/Test_SetTimeSeriesProperty_User_Prop_out.dv",InputFile2="Results/Test_SetTimeSeriesProperty_User_Prop_out.dv",IfDifferent=Warn)
