# Test formatting integers to hex string
# - input is integers and long
StartLog(LogFile="Results/Test_FormatStringProperty_IntegerFormat.TSTool.log")
RemoveFile(InputFile="Results/Test_FormatStringProperty_IntegerFormat_out.txt",IfNotFound=Ignore)
# Set properties to use as input.
SetProperty(PropertyName="Integer1",PropertyType=Integer,PropertyValue="100")
SetProperty(PropertyName="Integer2",PropertyType=Integer,PropertyValue="200")
# SetProperty(PropertyName="Long1",PropertyType=Integer,PropertyValue="300")
# SetProperty(PropertyName="Long2",PropertyType=Integer,PropertyValue="400")
SetProperty(PropertyName="String1",PropertyType=Integer,PropertyValue="500")
SetProperty(PropertyName="String2",PropertyType=Integer,PropertyValue="600")
# Format the string property as HexBytes (lower case).
FormatStringProperty(InputProperties="Integer1",IntegerFormat=HexBytes,OutputProperty="Test1IntegerHex")
FormatStringProperty(InputProperties="Integer1,Integer2",IntegerFormat=HexBytes,OutputProperty="Test2IntegerHex")
FormatStringProperty(InputProperties="Integer1",IntegerFormat=HexBytes,Delimiter="\s",OutputProperty="Test1IntegerHexWithSpace")
FormatStringProperty(InputProperties="Integer1,Integer2",IntegerFormat=HexBytes,Delimiter="\s",OutputProperty="Test2IntegerHexWithSpace")
FormatStringProperty(InputProperties="String1",IntegerFormat=HexBytes,OutputProperty="Test1StringHex")
FormatStringProperty(InputProperties="String1,String2",IntegerFormat=HexBytes,OutputProperty="Test2StringHex")
FormatStringProperty(InputProperties="String1",IntegerFormat=HexBytes,Delimiter="\s",OutputProperty="Test1StringHexWithSpace")
FormatStringProperty(InputProperties="String1,String2",IntegerFormat=HexBytes,Delimiter="\s",OutputProperty="Test2StringHexWithSpace")
FormatStringProperty(InputProperties="Integer1,String1",IntegerFormat=HexBytes,OutputProperty="TestIntegerAndStringHex")
FormatStringProperty(InputProperties="Integer1,String1",IntegerFormat=HexBytes,Delimiter="\s",OutputProperty="TestIntegerAndStringHexWithSpace")
# Format the string property as HexBytes (upper case).
FormatStringProperty(InputProperties="Integer1",IntegerFormat=HexBytesUpperCase,OutputProperty="Test1IntegerHexUpper")
FormatStringProperty(InputProperties="Integer1,Integer2",IntegerFormat=HexBytesUpperCase,OutputProperty="Test2IntegerHexUpper")
FormatStringProperty(InputProperties="Integer1",IntegerFormat=HexBytesUpperCase,Delimiter="\s",OutputProperty="Test1IntegerHexUpperWithSpace")
FormatStringProperty(InputProperties="Integer1,Integer2",IntegerFormat=HexBytesUpperCase,Delimiter="\s",OutputProperty="Test2IntegerHexUpperWithSpace")
FormatStringProperty(InputProperties="String1",IntegerFormat=HexBytesUpperCase,OutputProperty="Test1StringHexUpper")
FormatStringProperty(InputProperties="String1,String2",IntegerFormat=HexBytesUpperCase,OutputProperty="Test2StringHexUpper")
FormatStringProperty(InputProperties="String1",IntegerFormat=HexBytesUpperCase,Delimiter="\s",OutputProperty="Test1StringHexUpperWithSpace")
FormatStringProperty(InputProperties="String1,String2",IntegerFormat=HexBytesUpperCase,Delimiter="\s",OutputProperty="Test2StringHexUpperWithSpace")
FormatStringProperty(InputProperties="Integer1,String1",IntegerFormat=HexBytesUpperCase,OutputProperty="TestIntegerAndStringHexUpper")
FormatStringProperty(InputProperties="Integer1,String1",IntegerFormat=HexBytesUpperCase,Delimiter="\s",OutputProperty="TestIntegerAndStringHexUpperWithSpace")
# Format the string property as HexBytes (lower case, little endian).
FormatStringProperty(InputProperties="Integer1",IntegerFormat=HexBytes,Endianness=Little,OutputProperty="Test1IntegerHexLittle")
FormatStringProperty(InputProperties="Integer1,Integer2",IntegerFormat=HexBytes,Endianness=Little,OutputProperty="Test2IntegerHexLittle")
FormatStringProperty(InputProperties="Integer1",IntegerFormat=HexBytes,Endianness=Little,Delimiter="\s",OutputProperty="Test1IntegerHexWithSpaceLittle")
FormatStringProperty(InputProperties="Integer1,Integer2",IntegerFormat=HexBytes,Endianness=Little,Delimiter="\s",OutputProperty="Test2IntegerHexWithSpaceLittle")
FormatStringProperty(InputProperties="String1",IntegerFormat=HexBytes,Endianness=Little,OutputProperty="Test1StringHexLittle")
FormatStringProperty(InputProperties="String1,String2",IntegerFormat=HexBytes,Endianness=Little,OutputProperty="Test2StringHexLittle")
FormatStringProperty(InputProperties="String1",IntegerFormat=HexBytes,Endianness=Little,Delimiter="\s",OutputProperty="Test1StringHexWithSpaceLittle")
FormatStringProperty(InputProperties="String1,String2",IntegerFormat=HexBytes,Endianness=Little,Delimiter="\s",OutputProperty="Test2StringHexWithSpaceLittle")
FormatStringProperty(InputProperties="Integer1,String1",IntegerFormat=HexBytes,Endianness=Little,OutputProperty="TestIntegerAndStringHexLittle")
FormatStringProperty(InputProperties="Integer1,String1",IntegerFormat=HexBytes,Endianness=Little,Delimiter="\s",OutputProperty="TestIntegerAndStringHexWithSpaceLittle")
# Format the string property as HexBytes (lower case, num bytes).
FormatStringProperty(InputProperties="Integer1",IntegerFormat=HexBytes,NumBytes=2,OutputProperty="Test1IntegerHex2Bytes")
FormatStringProperty(InputProperties="Integer1,Integer2",IntegerFormat=HexBytes,NumBytes=2,OutputProperty="Test2IntegerHex2Bytes")
FormatStringProperty(InputProperties="Integer1",IntegerFormat=HexBytes,Delimiter="\s",NumBytes=2,OutputProperty="Test1IntegerHexWithSpace2Bytes")
FormatStringProperty(InputProperties="Integer1,Integer2",IntegerFormat=HexBytes,Delimiter="\s",NumBytes=2,OutputProperty="Test2IntegerHexWithSpace2Bytes")
FormatStringProperty(InputProperties="String1",IntegerFormat=HexBytes,NumBytes=2,OutputProperty="Test1StringHex2Bytes")
FormatStringProperty(InputProperties="String1,String2",IntegerFormat=HexBytes,NumBytes=2,OutputProperty="Test2StringHex2Bytes")
FormatStringProperty(InputProperties="String1",IntegerFormat=HexBytes,Delimiter="\s",NumBytes=2,OutputProperty="Test1StringHexWithSpace2Bytes")
FormatStringProperty(InputProperties="String1,String2",IntegerFormat=HexBytes,Delimiter="\s",NumBytes=2,OutputProperty="Test2StringHexWithSpace2Bytes")
FormatStringProperty(InputProperties="Integer1,String1",IntegerFormat=HexBytes,NumBytes=2,OutputProperty="TestIntegerAndStringHex2Bytes")
FormatStringProperty(InputProperties="Integer1,String1",IntegerFormat=HexBytes,Delimiter="\s",NumBytes=2,OutputProperty="TestIntegerAndStringHexWithSpace2Bytes")
# Format the string property as HexBytes (lower case, little endian, 2bytes).
FormatStringProperty(InputProperties="Integer1",IntegerFormat=HexBytes,Endianness=Little,NumBytes=2,OutputProperty="Test1IntegerHexLittle2Bytes")
FormatStringProperty(InputProperties="Integer1,Integer2",IntegerFormat=HexBytes,Endianness=Little,NumBytes=2,OutputProperty="Test2IntegerHexLittle2Bytes")
FormatStringProperty(InputProperties="Integer1",IntegerFormat=HexBytes,Endianness=Little,Delimiter="\s",NumBytes=2,OutputProperty="Test1IntegerHexWithSpaceLittle2Bytes")
FormatStringProperty(InputProperties="Integer1,Integer2",IntegerFormat=HexBytes,Endianness=Little,Delimiter="\s",NumBytes=2,OutputProperty="Test2IntegerHexWithSpaceLittle2Bytes")
FormatStringProperty(InputProperties="String1",IntegerFormat=HexBytes,Endianness=Little,NumBytes=2,OutputProperty="Test1StringHexLittle2Bytes")
FormatStringProperty(InputProperties="String1,String2",IntegerFormat=HexBytes,Endianness=Little,NumBytes=2,OutputProperty="Test2StringHexLittle2Bytes")
FormatStringProperty(InputProperties="String1",IntegerFormat=HexBytes,Endianness=Little,Delimiter="\s",NumBytes=2,OutputProperty="Test1StringHexWithSpaceLittle2Bytes")
FormatStringProperty(InputProperties="String1,String2",IntegerFormat=HexBytes,Endianness=Little,Delimiter="\s",NumBytes=2,OutputProperty="Test2StringHexWithSpaceLittle2Bytes")
FormatStringProperty(InputProperties="Integer1,String1",IntegerFormat=HexBytes,Endianness=Little,NumBytes=2,OutputProperty="TestIntegerAndStringHexLittle2Bytes")
FormatStringProperty(InputProperties="Integer1,String1",IntegerFormat=HexBytes,Endianness=Little,Delimiter="\s",NumBytes=2,OutputProperty="TestIntegerAndStringHexWithSpaceLittle2Bytes")
# Uncomment the following command to regenerate expected results.
# WritePropertiesToFile(OutputFile="ExpectedResults/Test_FormatStringProperty_IntegerFormat_out.txt",IncludeProperties="*Hex*")
WritePropertiesToFile(OutputFile="Results/Test_FormatStringProperty_IntegerFormat_out.txt",IncludeProperties="*Hex*")
CompareFiles(InputFile1="ExpectedResults/Test_FormatStringProperty_IntegerFormat_out.txt",InputFile2="Results/Test_FormatStringProperty_IntegerFormat_out.txt",IfDifferent=Warn)
