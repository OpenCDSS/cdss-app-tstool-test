# Test getting a static GitHub file
# - use the raw view so output does not contain HTML skin
# - check the response code for success
StartLog(LogFile="Results/Test_WebGet_StaticGitHubFile_ResponseCode.TSTool.log")
RemoveFile(InputFile="Results\Test_WebGet_StaticGitHubFile_ResponseCode.html",IfNotFound=Ignore)
# Uncomment the following command to regenerate the expected results file.
# WebGet(URI="https://raw.githubusercontent.com/OpenCDSS/cdss-app-tstool-test/master/test/regression/commands/general/WebGet/Data/Test-WebGet-TestData.txt",LocalFile="ExpectedResults\Test_WebGet_StaticGitHubFile_ResponseCode_out.txt")
WebGet(URI="https://raw.githubusercontent.com/OpenCDSS/cdss-app-tstool-test/master/test/regression/commands/general/WebGet/Data/Test-WebGet-TestData.txt",LocalFile="Results\Test_WebGet_StaticGitHubFile_ResponseCode_out.txt",ResponseCodeProperty="TestWebGetResponseCode")
CompareFiles(InputFile1="ExpectedResults\Test_WebGet_StaticGitHubFile_ResponseCode_out.txt",InputFile2="Results\Test_WebGet_StaticGitHubFile_ResponseCode_out.txt",IfDifferent=Warn)
#
# Also expect the response code to be 200 for success
If(Name="If_Test_WebGet",Condition="${TestWebGetResponseCode} != 200")
Message(Message="WebGet return ${TestWebGetResponseCode} but was expecting 200 for success.",CommandStatus=FAILURE)
EndIf(Name="If_Test_WebGet")
