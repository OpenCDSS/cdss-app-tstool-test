# File generated by...
# program:      TSTool 14.9.4 (2024-04-17)
# user:         steve
# date:         Wed Apr 17 14:27:07 America/Denver 2024
# host:         blue
# directory:    D:\Users\steve\cdss-dev\TSTool\git-repos\cdss-app-tstool-test\test\commands\CopyTimeSeriesPropertiesToTable
# command line: TSTool
# --home test/operational/CDSS
# -----------------------------------------------------------------------
# Command file name: "D:\Users\steve\cdss-dev\TSTool\git-repos\cdss-app-tstool-test\test\commands\CopyTimeSeriesPropertiesToTable\Test_CopyTimeSeriesPropertiesToTable_BuiltInSome.TSTool"
# Commands: 
# # Test copying time series properties to a table:
# # - TSID in an existing table is matched
# # - also copy the specified built-in properties
# StartLog(LogFile="Results/Test_CopyTimeSeriesPropertiesToTable_BuiltInSome.TSTool.log")
# RemoveFile(InputFile="Results/Test_CopyTimeSeriesPropertiesToTable_BuiltInSome_out.csv",IfNotFound="Ignore")
# # Define time series with properties
# NewTimeSeries(Alias="ts1",NewTSID="ts1..Precip.Year",Description="Test data 1",SetStart="2000",SetEnd="2005",Units="IN")
# SetTimeSeriesProperty(TSList="AllMatchingTSID",TSID="ts1",PropertyName="Status",PropertyType="String",PropertyValue="ts1Status")
# NewTimeSeries(Alias="ts2",NewTSID="ts2..Precip.Year",Description="Test data 2",SetStart="2000",SetEnd="2005",Units="IN")
# SetTimeSeriesProperty(TSList="AllMatchingTSID",TSID="ts2",PropertyName="Status",PropertyType="String",PropertyValue="ts2Status")
# NewTimeSeries(Alias="ts3",NewTSID="ts3..Precip.Year",Description="Test data 3",SetStart="2000",SetEnd="2005",Units="IN")
# SetTimeSeriesProperty(TSList="AllMatchingTSID",TSID="ts3",PropertyName="Status",PropertyType="String",PropertyValue="ts3Status")
# # Define table to receive properties
# ReadTableFromDelimitedFile(TableID="Table1",InputFile="Data\testtable.csv")
# # Copy the properties
# CopyTimeSeriesPropertiesToTable(IncludeBuiltInProperties="alias,units",TableID="Table1",TableTSIDColumn="loc",TableTSIDFormat="%L")
# # Uncomment the following to generate the expected results.
# WriteTableToDelimitedFile(TableID="Table1",OutputFile="ExpectedResults\Test_CopyTimeSeriesPropertiesToTable_BuiltInSome.csv")
# WriteTableToDelimitedFile(TableID="Table1",OutputFile="Results\Test_CopyTimeSeriesPropertiesToTable_BuiltInSome.csv")
# # Do regression comparison with the original input
# CompareFiles(InputFile1="ExpectedResults\Test_CopyTimeSeriesPropertiesToTable_BuiltInSome.csv",InputFile2="Results\Test_CopyTimeSeriesPropertiesToTable_BuiltInSome.csv",IfDifferent="Warn")
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20230805 on localhost\CDSS
# HydroBase.db_version:  design version: 20230512  last data change: 20230805
# HydroBase table structure for software is at least 2020072020200720
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20200720 on localhost\CDSS
# HydroBase.db_version:  design version: 20200720  last data change: 20200125
# HydroBase table structure for software is at least 2020072020200720
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20230805 on localhost\CDSS
# HydroBase.db_version:  design version: 20230512  last data change: 20230805
# HydroBase table structure for software is at least 2020072020200720
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
"loc","Scenario","Status","alias","units"
ts1,Scenario1,ts1Status,ts1,IN
ts2,Scenario2,ts2Status,ts2,IN
ts3,Scenario3,ts3Status,ts3,IN
