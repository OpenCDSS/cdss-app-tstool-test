# Test creating a new day interval time series
# - set the alias with ${Property}
# - set the new TSID with ${Property}
# - set the description with ${Property}
# - set set period with ${Property}
# - set the units with ${Property}
# - set the missing value TSID with ${Property}
# - set the initial value and flag with ${Property}
StartLog(LogFile="Results/Test_NewTimeSeries_Day_Properties.TSTool.log")
RemoveFile(InputFile="Results/Test_NewTimeSeries_Day_Properties_out.dv",IfNotFound=Ignore)
SetProperty(PropertyName="TestLocID",PropertyType=String,PropertyValue="loc1")
SetProperty(PropertyName="TestDataType",PropertyType=String,PropertyValue="Streamflow")
SetProperty(PropertyName="TestDescription",PropertyType=String,PropertyValue="Test description abc")
SetProperty(PropertyName="TestSetStart",PropertyType=DateTime,PropertyValue="2000-01-01")
SetProperty(PropertyName="TestSetEnd",PropertyType=DateTime,PropertyValue="2001-01-14")
SetProperty(PropertyName="TestUnits",PropertyType=String,PropertyValue="CFS")
SetProperty(PropertyName="TestMissing",PropertyType=String,PropertyValue="NaN")
SetProperty(PropertyName="TestInitValue",PropertyType=String,PropertyValue="1.23")
SetProperty(PropertyName="TestInitFlag",PropertyType=String,PropertyValue="F")
NewTimeSeries(Alias="${TestLocID}",NewTSID="${TestLocID}..${TestDataType}.Day",Description="${TestDescription}",SetStart="${TestSetStart}",SetEnd="${TestSetEnd}",Units="${TestUnits}",MissingValue=${TestMissing},InitialValue=${TestInitValue},InitialFlag="${TestInitFlag}")
# Uncomment the following command to regenerate the expected results file.
# WriteDateValue(OutputFile="ExpectedResults/Test_NewTimeSeries_Day_Properties_out.dv")
WriteDateValue(OutputFile="Results/Test_NewTimeSeries_Day_Properties_out.dv")
CompareFiles(InputFile1="ExpectedResults/Test_NewTimeSeries_Day_Properties_out.dv",InputFile2="Results/Test_NewTimeSeries_Day_Properties_out.dv",IfDifferent=Warn)
