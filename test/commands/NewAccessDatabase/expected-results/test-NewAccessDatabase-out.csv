# File generated by...
# program:      TSTool 14.3.0.dev3 (2022-07-08)
# user:         sam
# date:         Mon Jul 11 07:18:50 America/Denver 2022
# host:         RoaringFork
# directory:    C:\Users\sam\cdss-dev\TSTool\git-repos\cdss-app-tstool-test\test\commands\NewAccessDatabase
# command line: TSTool
# -home test/operational/CDSS
# -----------------------------------------------------------------------
# Command file name: "C:\Users\sam\cdss-dev\TSTool\git-repos\cdss-app-tstool-test\test\commands\NewAccessDatabase\test-NewAccessDatabase.tstool"
# Commands: 
# StartLog(LogFile="Results/Test-NewAccessDatabase.TSTool.log")
# # Test to read a table from an Access database:
# # - use an in-memory database and file database
# # - close the databases so that files are not open and locked
# RemoveFile(InputFile="results/test-access.accdb",IfNotFound=Ignore)
# CopyFile(InputFile="../ReadTableFromDataStore/Data/test-ms-access.accdb",OutputFile="results/test-access.accdb")
# # NewAccessDatabase(DataStore="TestAccess",DatabaseFile="results/test-access.accdb")
# OpenDataStore(DataStoreName="TestAccess",DataStoreDescription="Test Microsoft Access database",DataStoreType="GenericDatabaseDataStore",DatabaseEngine="Access",DatabaseName="results/test-access.accdb")
# RunSql(DataStore="TestAccess",Sql="CREATE TABLE table1 (id INTEGER CONSTRAINT id_costraint PRIMARY KEY, name CHAR NOT NULL, integer1 INTEGER, float1 REAL)")
# RunSql(DataStore="TestAccess",Sql="INSERT INTO table1 (id, name, integer1, float1) VALUES (1, 'name1', 1, 1.1)")
# RunSql(DataStore="TestAccess",Sql="INSERT INTO table1 (id, name, integer1, float1) VALUES (2, 'name2', 2, 2.2)")
# CloseDataStore(DataStore="TestAccess",StatusMessage="Closed after test.")
# # Read the table:
# # - make a copy of the database to prevent conflict
# CopyFile(InputFile="results\test-access.accdb",OutputFile="results\test-access2.accdb")
# OpenDataStore(DataStoreName="TestAccess2",DataStoreDescription="Access Test Database",DataStoreType="GenericDatabaseDataStore",DatabaseEngine="Access",DatabaseName="results/test-access.accdb")
# ReadTableFromDataStore(DataStore="TestAccess2",DataStoreTable="table1",TableID="TestTable")
# CloseDataStore(DataStore="TestAccess2")
# # Compare the tables after writing to files.
# # Uncomment the next line to regenerate expected results.
# WriteTableToDelimitedFile(TableID="TestTable",OutputFile="expected-results/test-NewAccessDatabase-out.csv",IncludeColumns="name,integer1,float1")
# WriteTableToDelimitedFile(TableID="TestTable",OutputFile="results/test-NewAccessDatabase-out.csv",IncludeColumns="name,integer1,float1")
# CompareFiles(InputFile1="expected-results/test-NewAccessDatabase-out.csv",InputFile2="results/test-NewAccessDatabase-out.csv",IfDifferent=Warn)
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20220330 on localhost\CDSS
# HydroBase.db_version:  design version: 20220330  last data change: 20220330
# HydroBase table structure for software is at least 2020072020200720
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20200720 on localhost\CDSS
# HydroBase.db_version:  design version: 20200720  last data change: 20200125
# HydroBase table structure for software is at least 2020072020200720
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20220330 on localhost\CDSS
# HydroBase.db_version:  design version: 20220330  last data change: 20220330
# HydroBase table structure for software is at least 2020072020200720
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
"name","integer1","float1"
name1,1,1
name2,2,2
