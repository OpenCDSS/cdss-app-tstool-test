# Test reading a table from a HydroBase data store
# - read from diversion comments stored procedure, with input parameter of structure number
# - pick a structure that is not active to ensure that comments don't change over time
StartLog(LogFile="Results/Test_ReadTableFromDataStore_HydroBase_Procedure_DivComments.TSTool.log")
RemoveFile(InputFile="Results/Test_ReadTableFromDataStore_HydroBase_Procedure_DivComments_out.csv",IfNotFound=Ignore)
ReadTableFromDataStore(DataStore="HydroBase",DataStoreProcedure="usp_CDSS_DiversionComment_Sel_By_Structure_num",ProcedureParameters="StructureNum:2",ProcedureReturnProperty="Test_ProcedureStatus",TableID="DivComments")
# Uncomment to regenerate expected results
# WriteTableToDelimitedFile(TableID="DivComments",OutputFile="ExpectedResults/Test_ReadTableFromDataStore_HydroBase_Procedure_DivComments_out.csv")
# Generate the results.
WriteTableToDelimitedFile(TableID="DivComments",OutputFile="Results/Test_ReadTableFromDataStore_HydroBase_Procedure_DivComments_out.csv")
# Do regression comparison with the expected results
CompareFiles(InputFile1="ExpectedResults/Test_ReadTableFromDataStore_HydroBase_Procedure_DivComments_out.csv",InputFile2="Results/Test_ReadTableFromDataStore_HydroBase_Procedure_DivComments_out.csv",MatchCase=False,IfDifferent=Warn)
# Use the following to list structures so that an inactive structure can be used.
# ReadTableFromDataStore(DataStore="HydroBase",DataStoreTable="vw_CDSS_Structure",Top=250,TableID="Structure")
# Also check the return status, should be 0
If(Name="IfStatus",Condition="${Test_ProcedureStatus} != 0")
Message(Message="Procedure return status ${Test_ProcedureStatus} is not 0.",CommandStatus=FAILURE)
EndIf(Name="IfStatus")
