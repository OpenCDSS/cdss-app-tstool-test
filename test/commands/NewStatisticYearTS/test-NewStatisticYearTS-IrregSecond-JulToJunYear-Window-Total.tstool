# Test NewStatisticYearTS:
# - IrregSecond interval data
# - year type JulToJunYear
# - Total
# - use an analysis window that spans January, with hour that includes midnight
# - use data values that cause years to have different totals
# - see the ExpectedResults/test-NewStatisticYearTS-IrregSecond-JulToJunYear-Window-Total.xlsx to confirm output
StartLog(LogFile="Results/test-NewStatisticYearTS-IrregSecond-JulToJunYear-Window-Total.tstool.log")
RemoveFile(InputFile="Results\test-NewStatisticYearTS-IrregSecond-JulToJunYear-Window-Total-out.dv",IfNotFound="Ignore")
NewPatternTimeSeries(Alias="ts1",NewTSID="ts1..Streamflow.IrregSecond",IrregularInterval="12Hour",Description="Test data",SetStart="1948-10-01 00:00:00",SetEnd="1951-03-12 00:00:00",Units="CFS",MissingValue="NaN",PatternValues="5,10,12,13,75,,7")
SetDebugLevel(LogFileLevel="10")
NewStatisticYearTS(TSList="LastMatchingTSID",TSID="ts1",Statistic="Total",OutputYearType="JulToJunYear",AnalysisWindowStart="12-01",AnalysisWindowEnd="01-31",Alias="Stat",NewTSID="ts1..Streamflow.Year.Total")
SetDebugLevel(ScreenLevel="0",LogFileLevel="0")
# Uncomment the following command to regenerate the expected results file.
# WriteDateValue(TSList="AllMatchingTSID",TSID="Stat",OutputFile="ExpectedResults\test-NewStatisticYearTS-IrregSecond-JulToJunYear-Window-Total-out.dv")
WriteDateValue(TSList="AllMatchingTSID",TSID="Stat",OutputFile="Results\test-NewStatisticYearTS-IrregSecond-JulToJunYear-Window-Total-out.dv")
CompareFiles(InputFile1="ExpectedResults\test-NewStatisticYearTS-IrregSecond-JulToJunYear-Window-Total-out.dv",InputFile2="Results\test-NewStatisticYearTS-IrregSecond-JulToJunYear-Window-Total-out.dv",IfDifferent="Warn")
