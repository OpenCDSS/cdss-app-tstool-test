# Test reading a delimited file
# - First column is numbers with leading zero - treat as text
# - other types are basic types
# - set the column types with parameters
# - specify parameters with ${Property}
StartLog(LogFile="Results/Test_ReadTableFromDelimitedFile_ColumnTypes_Properties.TSTool.log")
SetProperty(PropertyName="Test_TableID",PropertyType=String,PropertyValue="Table1")
SetProperty(PropertyName="Test_Delimiter",PropertyType=String,PropertyValue=",")
SetProperty(PropertyName="Test_InputFile",PropertyType=String,PropertyValue="Data\testdata2.csv")
SetProperty(PropertyName="Test_DateTimeColumns",PropertyType=String,PropertyValue="DateTime")
SetProperty(PropertyName="Test_DoubleColumns",PropertyType=String,PropertyValue="Double")
SetProperty(PropertyName="Test_IntegerColumns",PropertyType=String,PropertyValue="Integer")
SetProperty(PropertyName="Test_TextColumns",PropertyType=String,PropertyValue="NumberAsText,String")
RemoveFile(InputFile="Results/Test_ReadTableFromDelimitedFile_ColumnTypes_Properties_out.csv",IfNotFound=Ignore)
ReadTableFromDelimitedFile(TableID="${Test_TableID}",InputFile="${Test_InputFile}",Delimiter="${Test_Delimiter}",DateTimeColumns="${Test_DateTimeColumns}",DoubleColumns="${Test_DoubleColumns}",IntegerColumns="${Test_IntegerColumns}",TextColumns="${Test_TextColumns}")
# Uncomment the following line to generate the expected results.
# WriteTableToDelimitedFile(TableID="Table1",OutputFile="ExpectedResults\Test_ReadTableFromDelimitedFile_ColumnTypes_Properties_out.csv")
# Generate the results.
WriteTableToDelimitedFile(TableID="Table1",OutputFile="Results\Test_ReadTableFromDelimitedFile_ColumnTypes_Properties_out.csv")
# Do regression comparison with the original input (possible because strings
# and integers with no formatting issues).
CompareFiles(InputFile1="ExpectedResults/Test_ReadTableFromDelimitedFile_ColumnTypes_Properties_out.csv",InputFile2="Results/Test_ReadTableFromDelimitedFile_ColumnTypes_Properties_out.csv",IfDifferent=Warn)
