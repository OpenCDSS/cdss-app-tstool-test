# Test copying annual time series to a table:
# - and also create the table
# - also test RowCountProperty
#@docExample - command file is used as an example in the command's documentation
StartLog(LogFile="Results/Test_TimeSeriesToTable_Year_Create.TSTool.log")
RemoveFile(InputFile="Results/Test_TimeSeriesToTable_Year_Create_out.csv",IfNotFound="Ignore")
NewPatternTimeSeries(Alias="ts1",NewTSID="ts1..Flow.Year",SetStart="1960",SetEnd="2000",Units="ACFT",PatternValues="1,2,5,8,,20")
NewPatternTimeSeries(Alias="ts2",NewTSID="ts2..Flow.Year",SetStart="1950",SetEnd="2005",Units="ACFT",PatternValues="2,4,10,16,,40")
TimeSeriesToTable(TableID="TestTable",DateTimeColumn="Year",ValueColumn="%L-%T",FlagColumn="%L-%T-flag",RowCountProperty="TestRowCount",IfTableNotFound="Create")
# Generate the results.
WriteTableToDelimitedFile(TableID="TestTable",OutputFile="Results\Test_TimeSeriesToTable_Year_Create_out.csv")
# Uncomment the following to recreate expected results
# WriteTableToDelimitedFile(TableID="TestTable",OutputFile="ExpectedResults\Test_TimeSeriesToTable_Year_Create_out.csv")
CompareFiles(InputFile1="ExpectedResults/Test_TimeSeriesToTable_Year_Create_out.csv",InputFile2="Results/Test_TimeSeriesToTable_Year_Create_out.csv",IfDifferent="Warn")
#
# Also check the row count.
If(Name="If_RowCount",Condition="${TestRowCount} != 56")
    Message(Message="The TestRowCount (${TestRowCount}) property is not the expected value 56.",CommandStatus="WARNING")
EndIf(Name="If_RowCount")
