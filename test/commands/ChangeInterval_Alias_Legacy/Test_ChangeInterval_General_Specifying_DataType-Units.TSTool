# Test that the default data type and data units works (keeps the original TS) and that specifying both works
# This uses the legacy "TS Alias =" syntax
#@readOnly
StartLog(LogFile="Results/Test_ChangeInterval_General_Specifying_DataType-Units.TSTool.log")
RemoveFile(InputFile="Results\Test_ChangeInterval_General_Specifying_DataType-Units.dv",IfNotFound=Ignore)
#
TS Original = NewPatternTimeSeries(NewTSID="ts1..Flow.6Hour",Description="Test data",SetStart="2006-12-15 00",SetEnd="2007-01-29 00",Units="CFS",PatternValues="20,23,56,62,35,42")
TS Default = ChangeInterval(TSID="Original",NewInterval=Day,OldTimeScale=INST,NewTimeScale=INST)
TS NewDataType = ChangeInterval(TSID="Original",NewInterval=Day,OldTimeScale=INST,NewTimeScale=INST,NewDataType=ChangedDataType)
TS NewDataUnits = ChangeInterval(TSID="Original",NewInterval=Day,OldTimeScale=INST,NewTimeScale=INST,NewUnits=ChangedUnits)
Free(TSList=AllMatchingTSID,TSID="Original")
#
# Uncomment the following command to regenerate the expected results file.
#WriteDateValue(OutputFile="ExpectedResults\Test_ChangeInterval_General_Specifying_DataType-Units.dv",TSList=AllMatchingTSID,TSID="*")
WriteDateValue(OutputFile="Results\Test_ChangeInterval_General_Specifying_DataType-Units.dv",TSList=AllMatchingTSID,TSID="*")
#
CompareFiles(InputFile1="ExpectedResults\Test_ChangeInterval_General_Specifying_DataType-Units.dv",InputFile2="Results\Test_ChangeInterval_General_Specifying_DataType-Units.dv",WarnIfDifferent=True)
