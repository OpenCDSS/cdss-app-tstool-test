# Test computing the delta:
# - increasing trend
# - ResetType=Rollover with ResetMin and ResetMax
# - specify RolloverDeltaLimit differentiate between rollover and maintenance
# - all values in ts1 are in range
# - if files are different fail to differentiate between warnings from checks
# - copy data flags from the original time series
StartLog(LogFile="Results/test-Delta-ResetType-Rollover-RolloverDataLimit-CopyDataFlags.TSTool.log")
RemoveFile(InputFile="Results/test-Delta-ResetType-Rollover-RolloverDataLimit-CopyDataFlags-out.dv",IfNotFound="Ignore")
NewPatternTimeSeries(Alias="ts1",NewTSID="ts1...Day",Description="test data 1",SetStart="2000-01-01",SetEnd="2003-05-13",PatternValues="1,2,3,4,7,,10,,,,11,13,15,16,18,19.75,2,4,8,7,15,18",PatternFlags="Z,Y,Q,B,Z,,Y,,,,Q,B,,,Z,N,Y,Q,B,Z,,Q,Z")
Delta(ExpectedTrend="Increasing",ResetType="Rollover",Flag="Auto",Alias="%L-delta",CopyDataFlags="True",ResetMin="0",ResetMax="20",RolloverDeltaLimit=".3",RolloverFlag="Auto",ManualResetFlag="Auto")
# Uncomment the following command to regenerate expected results.
# WriteDateValue(OutputFile="ExpectedResults/test-Delta-ResetType-Rollover-RolloverDataLimit-CopyDataFlags-out.dv")
WriteDateValue(OutputFile="Results/test-Delta-ResetType-Rollover-RolloverDataLimit-CopyDataFlags-out.dv")
CompareFiles(InputFile1="ExpectedResults/test-Delta-ResetType-Rollover-RolloverDataLimit-CopyDataFlags-out.dv",InputFile2="Results/test-Delta-ResetType-Rollover-RolloverDataLimit-CopyDataFlags-out.dv",IfDifferent="Fail")
